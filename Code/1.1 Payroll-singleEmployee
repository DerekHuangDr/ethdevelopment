pragma solidity ^0.4.14;

contract Payroll {
    uint salary = 1 ether;
    address frank = 0xca35b7d915458ef540ade6068dfe2f44e8fa733c;
    uint constant payDuration = 10 seconds;
    uint lastPayday = now;
    
    function addFund() payable returns (uint ) {
        return this.balance;
    }
    
    function calculateRunway() returns (uint) {
        return this.balance / salary;
    }
    
    function hasEnoughFund() returns (bool) {
        //return this.balance >= salary;
        //return this.calculateRunway() > 0;
        return calculateRunway() > 0;
    }
    
    function getPaid() {
        if(msg.sender != frank) {
            revert();
        }
        
        uint nextPayday = lastPayday + payDuration;
        if (nextPayday > now){
            revert();
        }
            lastPayday = nextPayday;
            frank.transfer(salary);
    }
}
